# JMeter Configuration for CISNET API Testing
# Autor: Eddy Alexander Ramirez Lorenzana

# ===========================================
# SERVIDOR BACKEND CONFIGURATION
# ===========================================
# Tu backend corre en puerto 3000 según tu .env
server.host=localhost
server.port=3000
server.protocol=http
base.url=${server.protocol}://${server.host}:${server.port}

# ===========================================
# AUTENTICACIÓN JWT CONFIGURATION  
# ===========================================
# Tu JWT_SECRET del .env para validaciones locales si necesitas
jwt.secret=tu_jwt_secret_muy_seguro_cambialo_en_produccion_1757184406
jwt.expires=7d

# Headers comunes para requests autenticados
auth.header.name=Authorization
auth.header.prefix=Bearer

# ===========================================
# API ENDPOINTS CONFIGURATION
# ===========================================
# Endpoints de tu sistema según server.js
api.base.path=/api

# Auth endpoints
api.auth.login=/api/auth/login
api.auth.register=/api/auth/register
api.auth.profile=/api/auth/profile
api.auth.logout=/api/auth/logout
api.auth.recover=/api/auth/recover

# Product endpoints (públicos)
api.products.list=/api/products
api.products.search=/api/products/search
api.products.categories=/api/products/categories
api.products.price_range=/api/products/price-range
api.products.by_id=/api/products

# Cart endpoints (requieren JWT)
api.cart.get=/api/cart
api.cart.add_item=/api/cart/items
api.cart.update_item=/api/cart/items
api.cart.remove_item=/api/cart/items
api.cart.clear=/api/cart

# Utility endpoints
api.health=/health
api.root=/

# ===========================================
# PERFORMANCE TEST CONFIGURATION
# ===========================================
# Usuarios concurrentes por tipo de prueba
test.users.basic=10
test.users.load=50
test.users.stress=100
test.users.spike=200

# Tiempos de ejecución (segundos)
test.duration.basic=300
test.duration.load=600
test.duration.stress=900
test.duration.spike=120

# Ramp-up periods (segundos)
test.rampup.basic=30
test.rampup.load=60
test.rampup.stress=120
test.rampup.spike=10

# ===========================================
# REQUEST TIMEOUTS & LIMITS
# ===========================================
# Timeouts en milisegundos
http.timeout.connect=5000
http.timeout.response=10000

# Límites de respuesta aceptables (ms)
response.time.excellent=200
response.time.acceptable=500
response.time.warning=1000

# Error rate aceptable (porcentaje)
error.rate.acceptable=1.0

# ===========================================
# TEST DATA CONFIGURATION
# ===========================================
# Archivos de datos de prueba
test.data.users=test-data/users.csv
test.data.products=test-data/products.csv

# Datos por defecto para pruebas rápidas
default.user.email=demo@example.com
default.user.password=123456

# ===========================================
# REPORTING CONFIGURATION
# ===========================================
# Carpetas de resultados
results.dir=results
reports.dir=reports
logs.dir=logs

# Formato de timestamps para archivos
timestamp.format=yyyyMMdd_HHmmss

# ===========================================
# JMETER JVM CONFIGURATION
# ===========================================
# Configuración de memoria para pruebas de carga
jvm.xms=1g
jvm.xmx=4g
jvm.metaspace=256m

# Garbage Collector optimizado
jvm.gc=-XX:+UseG1GC -XX:MaxGCPauseMillis=100

# ===========================================
# MONITORING CONFIGURATION
# ===========================================
# Métricas a capturar
monitor.cpu=true
monitor.memory=true
monitor.network=true
monitor.database=true

# Intervalos de muestreo (segundos)
monitor.interval.system=5
monitor.interval.database=10

# ===========================================
# DEBUG CONFIGURATION
# ===========================================
# Niveles de logging
log.level.jmeter=INFO
log.level.http=WARN
log.level.test=INFO

# Habilitar debug para desarrollo
debug.enabled=false
debug.http.headers=false
debug.http.body=false

# ===========================================
# DATABASE CONFIGURATION (PARA MONITOREO)
# ===========================================
# Tu base de datos SQLite según .env
db.type=sqlite
db.path=./database/software_sales.db
db.driver=org.sqlite.JDBC
db.url=jdbc:sqlite:${db.path}

# Queries para monitoreo
db.query.users=SELECT COUNT(*) as total_users FROM users
db.query.products=SELECT COUNT(*) as total_products FROM products  
db.query.carts=SELECT COUNT(*) as active_carts FROM carts WHERE created_at > datetime('now', '-1 day')

# ===========================================
# FRONTEND CONFIGURATION (OPCIONAL)
# ===========================================
# Tu frontend según .env
frontend.url=http://localhost:5173
frontend.cors.origin=${frontend.url}